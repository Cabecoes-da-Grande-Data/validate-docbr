{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"validate-docbr Pacote Python para valida\u00e7\u00e3o de documentos brasileiros. Instala\u00e7\u00e3o do MRE Para instalar o pacote: pip install validate-docbr","title":"Instala\u00e7\u00e3o"},{"location":"#validate-docbr","text":"Pacote Python para valida\u00e7\u00e3o de documentos brasileiros.","title":"validate-docbr"},{"location":"#instalacao-do-mre","text":"Para instalar o pacote: pip install validate-docbr","title":"Instala\u00e7\u00e3o do MRE"},{"location":"guia-de-uso/","text":"M\u00e9todos Todos os documentos possuem os mesmos m\u00e9todos e funcionam da mesma forma. validate Valida o documento passado como argumento. Retorna um bool , True caso seja v\u00e1lido, False caso contr\u00e1rio . Recebe os par\u00e2metros: Par\u00e2metro Tipo Valor padr\u00e3o Obrigat\u00f3rio Descri\u00e7\u00e3o doc str '' X O documento que se quer validar. from validate_docbr import CPF cpf = CPF() # Validar CPF cpf.validate(\"012.345.678-90\") # True cpf.validate(\"012.345.678-91\") # False generate Gera um novo documento, retorna em formato de str . Recebe os par\u00e2metros: Par\u00e2metro Tipo Valor padr\u00e3o Obrigat\u00f3rio Descri\u00e7\u00e3o mask bool False - Quando possui o valor True , o documento retornado estar\u00e1 formatado. from validate_docbr import CPF cpf = CPF() # Gerar novo CPF new_cpf_one = cpf.generate() # \"01234567890\" new_cpf_two = cpf.generate(True) # \"012.345.678-90\" generate_list Gera uma lista de documentos, retorna em formato de list com elementos do tipo str . Recebe os par\u00e2metros: Par\u00e2metro Tipo Valor padr\u00e3o Obrigat\u00f3rio Descri\u00e7\u00e3o n int 1 X A quantidade desejada de documentos que ser\u00e3o gerados. mask bool False - Se os documentos gerados dever\u00e3o ter ou n\u00e3o m\u00e1scara. repeat bool False - Se aceita ou n\u00e3o documentos repetidos. from validate_docbr import CPF cpf = CPF() # Gerar lista de CPFs cpfs_one = cpf.generate_list(2) # [ \"85215667438\", \"28293145811\" ] cpfs_two = cpf.generate_list(2, True) # [ \"852.156.674-38\", \"282.931.458-11\" ] mask Mascara o documento passado como argumento. Retorna um str que \u00e9 o documento mascarado . Recebe os par\u00e2metros: Par\u00e2metro Tipo Valor padr\u00e3o Obrigat\u00f3rio Descri\u00e7\u00e3o doc str '' X O documento que se quer mascarar. from validate_docbr import CPF cpf = CPF() cpf_me = \"01234567890\" # Mascara o CPF cpf.mask(cpf_me) # \"012.345.678-90\"","title":"Guia de uso"},{"location":"guia-de-uso/#metodos","text":"Todos os documentos possuem os mesmos m\u00e9todos e funcionam da mesma forma.","title":"M\u00e9todos"},{"location":"guia-de-uso/#validate","text":"Valida o documento passado como argumento. Retorna um bool , True caso seja v\u00e1lido, False caso contr\u00e1rio . Recebe os par\u00e2metros: Par\u00e2metro Tipo Valor padr\u00e3o Obrigat\u00f3rio Descri\u00e7\u00e3o doc str '' X O documento que se quer validar. from validate_docbr import CPF cpf = CPF() # Validar CPF cpf.validate(\"012.345.678-90\") # True cpf.validate(\"012.345.678-91\") # False","title":"validate"},{"location":"guia-de-uso/#generate","text":"Gera um novo documento, retorna em formato de str . Recebe os par\u00e2metros: Par\u00e2metro Tipo Valor padr\u00e3o Obrigat\u00f3rio Descri\u00e7\u00e3o mask bool False - Quando possui o valor True , o documento retornado estar\u00e1 formatado. from validate_docbr import CPF cpf = CPF() # Gerar novo CPF new_cpf_one = cpf.generate() # \"01234567890\" new_cpf_two = cpf.generate(True) # \"012.345.678-90\"","title":"generate"},{"location":"guia-de-uso/#generate_list","text":"Gera uma lista de documentos, retorna em formato de list com elementos do tipo str . Recebe os par\u00e2metros: Par\u00e2metro Tipo Valor padr\u00e3o Obrigat\u00f3rio Descri\u00e7\u00e3o n int 1 X A quantidade desejada de documentos que ser\u00e3o gerados. mask bool False - Se os documentos gerados dever\u00e3o ter ou n\u00e3o m\u00e1scara. repeat bool False - Se aceita ou n\u00e3o documentos repetidos. from validate_docbr import CPF cpf = CPF() # Gerar lista de CPFs cpfs_one = cpf.generate_list(2) # [ \"85215667438\", \"28293145811\" ] cpfs_two = cpf.generate_list(2, True) # [ \"852.156.674-38\", \"282.931.458-11\" ]","title":"generate_list"},{"location":"guia-de-uso/#mask","text":"Mascara o documento passado como argumento. Retorna um str que \u00e9 o documento mascarado . Recebe os par\u00e2metros: Par\u00e2metro Tipo Valor padr\u00e3o Obrigat\u00f3rio Descri\u00e7\u00e3o doc str '' X O documento que se quer mascarar. from validate_docbr import CPF cpf = CPF() cpf_me = \"01234567890\" # Mascara o CPF cpf.mask(cpf_me) # \"012.345.678-90\"","title":"mask"},{"location":"licenca/","text":"MIT License Copyright (c) 2018 The Python Packaging Authority Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Licen\u00e7a"},{"location":"licenca/#mit-license","text":"Copyright (c) 2018 The Python Packaging Authority Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"sobre/","text":"Pacote Python para valida\u00e7\u00e3o de documentos brasileiros. Documentos Documentos que est\u00e3o no pacote: CPF: Cadastro de Pessoas F\u00edsicas; CNPJ: Cadastro Nacional da Pessoa Jur\u00eddica; CNS: Cart\u00e3o Nacional de Sa\u00fade.","title":"Sobre"},{"location":"sobre/#documentos","text":"Documentos que est\u00e3o no pacote: CPF: Cadastro de Pessoas F\u00edsicas; CNPJ: Cadastro Nacional da Pessoa Jur\u00eddica; CNS: Cart\u00e3o Nacional de Sa\u00fade.","title":"Documentos"}]}